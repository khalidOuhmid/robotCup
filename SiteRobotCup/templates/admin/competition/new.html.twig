{# templates/admin/competition/new.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}
<div class="container mx-auto p-6">
    <h1 class="text-3xl font-bold mb-6">Nouvelle compétition</h1>
    
    {{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}
        <div class="bg-white rounded-lg shadow-md p-6">
            <div class="grid md:grid-cols-2 gap-6">
                <div class="space-y-4">
                    {{ form_row(form.cmpName, {
                        'attr': {'class': 'w-full rounded border-gray-300'}
                    }) }}
                    {{ form_row(form.cmpAddress, {
                        'attr': {'class': 'w-full rounded border-gray-300'}
                    }) }}
                    {{ form_row(form.cmpDesc, {
                        'attr': {'class': 'w-full rounded border-gray-300'}
                    }) }}
                </div>
                <div class="space-y-4">
                    {{ form_row(form.cmpDateBegin, {
                        'attr': {'class': 'w-full rounded border-gray-300'}
                    }) }}
                    {{ form_row(form.cmpDateEnd, {
                        'attr': {'class': 'w-full rounded border-gray-300'}
                    }) }}
                    <div class="space-y-2">
                        <div class="flex items-center">
                            {{ form_widget(form.includeTournament, {
                                'attr': {
                                    'class': 'rounded border-gray-300 mr-2',
                                    'data-tournament-checkbox': true
                                }
                            }) }}
                            {{ form_label(form.includeTournament) }}
                        </div>
                        <div id="tournamentOptions" class="ml-4 space-y-4 bg-gray-50 p-4 rounded-lg" style="display: none;">
                            {{ form_row(form.cmpRoundSystem, {
                                'attr': {
                                    'class': 'w-full rounded border-gray-300 focus:border-blue-500 focus:ring-blue-500',
                                    'data-tournament-system': true
                                },
                                'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}
                            }) }}
                            
                            <div id="rounds-field" class="border-l-4 border-blue-500 pl-4" style="display: none;">
                                {{ form_row(form.cmpRounds, {
                                    'attr': {
                                        'class': 'w-full rounded border-gray-300 focus:border-blue-500 focus:ring-blue-500',
                                        'min': 1,
                                        'max': 16,
                                        'data-rounds-input': true
                                    },
                                    'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'},
                                    'help': 'Maximum 16 rencontres possibles par tournoi'
                                }) }}
                            </div>

                            <div class="flex items-center space-x-2 pt-2 border-t border-gray-200">
                                {{ form_widget(form.includeThirdPlace, {
                                    'attr': {
                                        'class': 'rounded border-gray-300 text-blue-600 focus:ring-blue-500',
                                        'data-third-place-checkbox': true
                                    }
                                }) }}
                                {{ form_label(form.includeThirdPlace, null, {
                                    'label_attr': {'class': 'text-sm text-gray-700'}
                                }) }}
                            </div>

                            <div class="mt-2 text-sm text-gray-600">
                                <ul class="list-disc pl-5 space-y-1">
                                    <li>Ronde Suisse : Appariement basé sur les points avec nombre de rondes spécifié</li>
                                    <li>Ronde Hollandaise : Appariement basé sur le classement</li>
                                    <li>Système Monrad : Appariement similaire au système suisse</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="flex gap-4">
            <button type="submit" class="px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                Créer
            </button>
            <a href="{{ path('app_default') }}" class="px-6 py-2 bg-gray-500 text-white rounded hover:bg-gray-600">
                Annuler
            </a>
        </div>
    {{ form_end(form) }}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const tournamentCheckbox = document.querySelector('[data-tournament-checkbox]');
    const tournamentOptions = document.getElementById('tournamentOptions');
    const thirdPlaceCheckbox = document.querySelector('[data-third-place-checkbox]');
    const tournamentSystem = document.querySelector('[data-tournament-system]');
    const roundsField = document.getElementById('rounds-field');

    function updateDisplay() {
        const isTournamentChecked = tournamentCheckbox.checked;
        const selectedSystem = tournamentSystem.value;

        tournamentOptions.style.display = isTournamentChecked ? 'block' : 'none';
        tournamentSystem.disabled = !isTournamentChecked;
        thirdPlaceCheckbox.disabled = !isTournamentChecked;
        
        // Afficher le champ nombre de rondes uniquement pour le système Suisse
        roundsField.style.display = (isTournamentChecked && selectedSystem === 'SUISSE') ? 'block' : 'none';
        
        // Rendre le champ obligatoire si système Suisse sélectionné
        const roundsInput = document.querySelector('[data-rounds-input]');
        if (roundsInput) {
            roundsInput.required = (isTournamentChecked && selectedSystem === 'SUISSE');
        }
    }

    tournamentCheckbox.addEventListener('change', updateDisplay);
    tournamentSystem.addEventListener('change', updateDisplay);

    // État initial
    updateDisplay();
});
</script>
{% endblock %}